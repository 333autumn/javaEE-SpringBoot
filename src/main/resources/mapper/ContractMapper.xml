<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.FruitSalesPlatform.dao.ContractDao">

<resultMap id="contractDetail" type="com.FruitSalesPlatform.vo.ContractDetailVo">
    <id column="contractid" property="contractid"/>
    <result column="barcode" property="barcode"/>
    <result column="type" property="type"/>
    <result column="createtime" property="createtime"/>
    <association property="retailer" javaType="com.FruitSalesPlatform.entity.Retailer">
        <id column="retailerid" property="retailerid"/>
        <result column="retailer_name" property="name"/>
        <result column="telphone" property="telphone"/>
        <result column="address" property="address"/>
    </association>
    <collection property="fruits" ofType="com.FruitSalesPlatform.vo.CommodityVo">
        <id column="fruitid" property="fruitid"/>
        <result column="fruit_name" property="name"/>
        <result column="fruit_price" property="price"/>
        <result column="locality" property="locality"/>
        <result column="number" property="number"/>
        <collection property="accessories" ofType="com.FruitSalesPlatform.entity.Accessory">
            <result column="accessory_name" property="name"/>
            <result column="accessory_price" property="price"/>
        </collection>
    </collection>
</resultMap>

    <insert id="insertOne">
        insert into contract(contractid, retailerid, barcode, type, createtime)
        values (#{contractid},#{retailerid},#{barcode},#{type},#{createtime})
    </insert>

    <delete id="deleteById">
        delete from contract where contractid=#{contractid};
    </delete>

    <select id="findDetail" resultMap="contractDetail">
        select
            contract.contractid,contract.barcode,contract.type,contract.createtime,
            retailer.name as retailer_name,retailer.telphone,retailer.address,
            mdl.fruitid,mdl.fruit_name,mdl.fruit_price,mdl.locality,mdl.number,
            mdl.accessory_name,mdl.accessory_price
        from(
            select
                commodities.fruitid,commodities.name as fruit_name,commodities.price as fruit_price,commodities.locality,middle_tab.number,
                accessory.name as accessory_name,accessory.price as accessory_price
            from
                middle_tab
                    left join commodities on middle_tab.fruitid=commodities.fruitid
                    left join accessory on commodities.fruitid = accessory.fruitid
            where
                middle_tab.contractid=#{contractid}
            )mdl,contract left join retailer on retailer.retailerid=contract.retailerid
        where
            contract.contractid=#{contractid}
    </select>

    <select id="getMaxBarCode" resultType="java.lang.String">
        select max(contract.barcode) from contract;
    </select>

    <select id="findPages" resultType="com.FruitSalesPlatform.vo.ContractListVo">
        select
        contract.contractid,contract.barcode,contract.type,contract.createtime,
        retailer.name
        from
        contract left join retailer  on contract.retailerid = retailer.retailerid
        <if test="pageNum!=null and pageSize!=null">
            limit ${(pageNum-1)*pageSize},${pageSize};
        </if>
    </select>

    <select id="findPagesByKey" resultType="com.FruitSalesPlatform.vo.ContractListVo">
        select
        contract.contractid,contract.barcode,contract.type,contract.createtime,
        retailer.name
        from
        contract left join retailer  on contract.retailerid = retailer.retailerid
        where
            contractid!=0
        <if test="barcode!=null">
            and barcode like '%${barcode}%'
        </if>
        <if test="name!=null">
            and retailer.name like '%${name}%'
        </if>
        <if test="type!=null">
            and type=${type}
        </if>
        <if test="startTime!=null and endTime!=null">
            and contract.createtime between #{startTime} and #{endTime}
        </if>
        <if test="pageNum!=null and pageSize!=null">
            limit ${(pageNum-1)*pageSize},${pageSize};
        </if>
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(*) from contract;
    </select>

    <select id="countByKey" resultType="java.lang.Long">
        select
            count(*)
        from
            contract left join retailer  on contract.retailerid = retailer.retailerid
        where
            contractid!=0
        <if test="barcode!=null">
            and barcode like '%${barcode}%'
        </if>
        <if test="name!=null">
            and retailer.name like '%${name}%'
        </if>
        <if test="type!=null">
            and type=${type}
        </if>
        <if test="startTime!=null and endTime!=null">
            and contract.createtime between #{startTime} and #{endTime}
        </if>
    </select>

</mapper>
